# This workflow will build a container and deploy it to an Azure Functions App on Linux when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure Functions app.
# For instructions see https://learn.microsoft.com/en-us/azure/azure-functions/functions-create-function-linux-custom-image?tabs=in-process%2Cbash%2Cazure-cli&pivots=programming-language-csharp
#
# To configure this workflow:
# 1. Set up the following secrets in your repository:
#   - AZURE_RBAC_CREDENTIALS
#   - REGISTRY_USERNAME
#   - REGISTRY_PASSWORD
# 2. Change env variables for your configuration.
#
# For more information on:
#   - GitHub Actions for Azure: https://github.com/Azure/Actions
#   - Azure Functions Container Action: https://github.com/Azure/functions-container-action
#   - Azure Service Principal for RBAC: https://github.com/Azure/functions-action#using-azure-service-principal-for-rbac-as-deployment-credential
#
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples/tree/master/FunctionApp

name: Load Testing
#Control when the workflow will run
on:
  push:
    branches: ["master"]

env:
  LOAD_TEST_RESOURCE: "MiguelGarcia"
  LOAD_TEST_RESOURCE_GROUP: "MiguelGarcia"
  LOAD_TEST_LOCATION: "East US"
  AZURE_WEBAPP_NAME: "loadtesting"
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  NODE_VERSION: '14.5.1'
  LOCATION: "East US"
  APPINSIGHTLOCATION: "East US"
  DATABASEACCOUNTLOCATION: "East US"
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

 #   - name: 'Login via Azure CLI'
 #     uses: azure/login@v1
 #     with:
 #       client-id: 'abec917b-9015-4f61-816c-de68ad53cff8'
 #       tenant-id: '0e2eb8d8-b8c9-4ee3-97e0-07f405398b85'
 #       subscription-id: '9e84a466-f5f9-4b99-85b1-cf49bbb530fb'
 #  
 #   - name: 'Run Azure CLI commands'
 #     run: |
 #           az account show
 #           az group list
 #           pwd   

     
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      continue-on-error: false
      with:
        creds: '{"clientId": "abec917b-9015-4f61-816c-de68ad53cff8", "clientSecret": "JHS8Q~zFQ9zq7DvSy6pL87b_bF.tXmah0Jkz7b8G", "subscriptionId": "dbb44df0-8a01-4b7a-84c7-a15173ede004", "tenantId": "0e2eb8d8-b8c9-4ee3-97e0-07f405398b85", "activeDirectoryEndpointUrl": "https://login.microsoftonline.com", "resourceManagerEndpointUrl": "https://management.azure.com/", "activeDirectoryGraphResourceId": "https://graph.windows.net/", "sqlManagementEndpointUrl": "https://management.core.windows.net:8443/", "galleryEndpointUrl": "https://gallery.azure.com/", "managementEndpointUrl": "https://management.core.windows.net/"}'

    - name: 'Azure Load Testing'
      uses: azure/load-testing@v1
      with:
        loadTestConfigFile: 'logintest.yaml'
        loadTestResource: 'logintest.jmx'
        resourceGroup: 'MiguelGarcia'

    - uses: actions/upload-artifact@v2
      with:
        name: loadTestResults
        path: ${{ github.workspace }}/loadTest        
